FROM docker.io/library/node:16-alpine AS development
ENV NODE_ENV production

WORKDIR /app

COPY ui/package.json .
COPY ui/yarn.lock .
RUN yarn install

COPY ui .
RUN yarn build

EXPOSE 3000
CMD [ "yarn", "start" ]

FROM docker.io/library/node:16-alpine AS builder
ENV NODE_ENV production

WORKDIR /app

COPY ui/package.json .
COPY ui/yarn.lock .
RUN yarn install --production

COPY ui .
RUN yarn build

FROM docker.io/library/nginx:stable-alpine as production
ENV NODE_ENV production
COPY --from=builder /app/build /usr/share/nginx/html
COPY nginx.conf /etc/nginx/conf.d/default.conf
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
