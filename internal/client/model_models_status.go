/*
Nexodus API

This is the Nexodus API Server.

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ModelsStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsStatus{}

// ModelsStatus struct for ModelsStatus
type ModelsStatus struct {
	Hostname    *string `json:"hostname,omitempty"`
	Id          *string `json:"id,omitempty"`
	IsReachable *bool   `json:"is_reachable,omitempty"`
	Latency     *string `json:"latency,omitempty"`
	Method      *string `json:"method,omitempty"`
	UserId      *string `json:"user_id,omitempty"`
	WgIp        *string `json:"wg_ip,omitempty"`
}

// NewModelsStatus instantiates a new ModelsStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsStatus() *ModelsStatus {
	this := ModelsStatus{}
	return &this
}

// NewModelsStatusWithDefaults instantiates a new ModelsStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsStatusWithDefaults() *ModelsStatus {
	this := ModelsStatus{}
	return &this
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *ModelsStatus) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsStatus) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *ModelsStatus) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *ModelsStatus) SetHostname(v string) {
	o.Hostname = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsStatus) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsStatus) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsStatus) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsStatus) SetId(v string) {
	o.Id = &v
}

// GetIsReachable returns the IsReachable field value if set, zero value otherwise.
func (o *ModelsStatus) GetIsReachable() bool {
	if o == nil || IsNil(o.IsReachable) {
		var ret bool
		return ret
	}
	return *o.IsReachable
}

// GetIsReachableOk returns a tuple with the IsReachable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsStatus) GetIsReachableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsReachable) {
		return nil, false
	}
	return o.IsReachable, true
}

// HasIsReachable returns a boolean if a field has been set.
func (o *ModelsStatus) HasIsReachable() bool {
	if o != nil && !IsNil(o.IsReachable) {
		return true
	}

	return false
}

// SetIsReachable gets a reference to the given bool and assigns it to the IsReachable field.
func (o *ModelsStatus) SetIsReachable(v bool) {
	o.IsReachable = &v
}

// GetLatency returns the Latency field value if set, zero value otherwise.
func (o *ModelsStatus) GetLatency() string {
	if o == nil || IsNil(o.Latency) {
		var ret string
		return ret
	}
	return *o.Latency
}

// GetLatencyOk returns a tuple with the Latency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsStatus) GetLatencyOk() (*string, bool) {
	if o == nil || IsNil(o.Latency) {
		return nil, false
	}
	return o.Latency, true
}

// HasLatency returns a boolean if a field has been set.
func (o *ModelsStatus) HasLatency() bool {
	if o != nil && !IsNil(o.Latency) {
		return true
	}

	return false
}

// SetLatency gets a reference to the given string and assigns it to the Latency field.
func (o *ModelsStatus) SetLatency(v string) {
	o.Latency = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *ModelsStatus) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsStatus) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *ModelsStatus) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *ModelsStatus) SetMethod(v string) {
	o.Method = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ModelsStatus) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsStatus) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ModelsStatus) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *ModelsStatus) SetUserId(v string) {
	o.UserId = &v
}

// GetWgIp returns the WgIp field value if set, zero value otherwise.
func (o *ModelsStatus) GetWgIp() string {
	if o == nil || IsNil(o.WgIp) {
		var ret string
		return ret
	}
	return *o.WgIp
}

// GetWgIpOk returns a tuple with the WgIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsStatus) GetWgIpOk() (*string, bool) {
	if o == nil || IsNil(o.WgIp) {
		return nil, false
	}
	return o.WgIp, true
}

// HasWgIp returns a boolean if a field has been set.
func (o *ModelsStatus) HasWgIp() bool {
	if o != nil && !IsNil(o.WgIp) {
		return true
	}

	return false
}

// SetWgIp gets a reference to the given string and assigns it to the WgIp field.
func (o *ModelsStatus) SetWgIp(v string) {
	o.WgIp = &v
}

func (o ModelsStatus) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsReachable) {
		toSerialize["is_reachable"] = o.IsReachable
	}
	if !IsNil(o.Latency) {
		toSerialize["latency"] = o.Latency
	}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.WgIp) {
		toSerialize["wg_ip"] = o.WgIp
	}
	return toSerialize, nil
}

type NullableModelsStatus struct {
	value *ModelsStatus
	isSet bool
}

func (v NullableModelsStatus) Get() *ModelsStatus {
	return v.value
}

func (v *NullableModelsStatus) Set(val *ModelsStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsStatus(val *ModelsStatus) *NullableModelsStatus {
	return &NullableModelsStatus{value: val, isSet: true}
}

func (v NullableModelsStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
