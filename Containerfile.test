FROM docker.io/library/golang:1.19-alpine as build

WORKDIR /src
COPY go.mod .
COPY go.sum .
RUN go mod download

COPY . .
RUN CGO_ENABLED=0 go build \
    -ldflags="-extldflags=-static" \
    -o ./dist/apexd ./cmd/apexd
RUN CGO_ENABLED=0 go build \
    -ldflags="-extldflags=-static" \
    -o ./dist/apexctl ./cmd/apexctl

FROM alpine:3.16 as alpine
RUN apk add --no-cache \
    iputils \
    wireguard-tools \
    iptables \
    psmisc \
    ca-certificates
COPY --from=build /src/dist/apexd /bin/apexd
COPY --from=build /src/dist/apexctl /bin/apexctl
COPY ./hack/update-ca.sh /update-ca.sh
RUN chmod a+x /update-ca.sh

FROM fedora:36 as fedora
RUN dnf update -qy && \
    dnf install --setopt=install_weak_deps=False -qy \
    ca-certificates \
    iputils \
    iproute \
    psmisc \
    procps-ng \
    wireguard-tools \
    iptables \
    hostname \
    && \
    dnf clean all
COPY --from=build /src/dist/apexd /bin/apexd
COPY --from=build /src/dist/apexctl /bin/apexctl
COPY ./hack/update-ca.sh /update-ca.sh
RUN chmod a+x /update-ca.sh

FROM ubuntu:22.04 as ubuntu
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update -qy && \
    apt-get install --no-install-recommends -qy \
    ca-certificates \
    iputils-ping \
    iproute2 \
    wireguard-tools \
    iptables \
    net-tools \
    traceroute \
    tcpdump \
    conntrack \
    psmisc \
    && \
    apt-get clean
COPY --from=build /src/dist/apexd /bin/apexd
COPY --from=build /src/dist/apexctl /bin/apexctl
COPY ./hack/update-ca.sh /update-ca.sh
RUN chmod a+x /update-ca.sh
